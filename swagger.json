{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Generate Signature",
    "description": "Retrieve decoded signatures for making TikTok webcast requests. This API works by reverse-engineering the function required to generate valid signatures and then signing requested URLs."
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Signatures",
      "description": "Retrieve decoded signatures for TikTok requests."
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/webcast/sign_url": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "type": "string",
            "description": "The URL to check",
            "required": true,
            "allowEmptyValue": false
          },
          {
            "in": "query",
            "name": "client",
            "enum": ["docs"],
            "type": "string",
            "description": "The source of the request",
            "required": false
          }
        ],
        "tags": ["Signatures"],
        "summary": "Generate X-Bogus, msToken, _signature values for TikTok",
        "responses": {
          "200": {
            "description": "The data has been successfully signed",
            "schema": {
              "$ref": "#/definitions/Autograph"
            }
          },
          "400": {
            "description": "Data sent to the server is missing or deformed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Autograph": {
      "properties": {
        "signedUrl": {
          "type": "string"
        },
        "msToken": {
          "type": "string"
        },
        "_signature": {
          "type": "string"
        },
        "X-Bogus": {
          "type": "string"
        },
        "User-Agent": {
          "type": "string"
        },
        "browserVersion": {
          "type": "string"
        },
        "browserName": {
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "error": {
          "type": "string"
        }
      }
    }
  }
}
